// -- ---- -- \\
// -- TODO -- \\
// -- ---- -- \\
	[x] Create Directives for editing/deleting todo items and todolists
		[x] Todolist Directive
		[x] Todo Item Directive
	[x] Proper Forms for creating Todolists and Todo Items
		[x] createUser Form
			[***] modal if username exists ("This name exists. Do you want to see this users todolists or do you want to create a new one?")
			[x] enable/disable go button
		[x] Todolist Form
		[x] Todoitem Form

	[x] Fix defect where editing title updates incorrectly

	[x] Todos should be able to be edited (title, description, complete:true/false) and rearranged
		[x] edit title
		[x] edit description
		[x] isComplete: true/false
	[x] Todolists should be able to be edited (title, isComplete) and rearranged
		[x] edit title
		[x] Validation of form
		[x] isComplete: true/false

	[x] Todolists should be organized into 2 categories, isCompleted and !isCompleted
	[x] Todos should be organized into 2 categories, isCompleted and !isCompleted

	[x] Nav component that lets you go backwards - may require a controller that keeps track of all user data so that user can be routed correctly

	[x] Creating a Todolist and todolistitem straight from the URL does NOT work yet (it will create a todolist but it does NOT save for the user)
		[x] Make sure you can do all of these things:
			[x] create user from website AND Url
			[x] create todolist from website AND Url
				[x] The created todolist will be associated with the user it is a part of
			[x] create todo from website AND Url
				[x] Creating a todo from the URL will edit and update the todolist it is a part of.
			[x] create a user, and todolist, and a todoitem all in one go, ie (s2doo.me/<newUser>/<newTodolist>/<newTodo>), and have everything be created successfully.
			[x] create a user and a todolist in one go

	[x] Allow spaces in Todolist titles, todo titles, todo descriptions, but NOT usernames

	[] Implement SASS into project
		[x] Implement Sass
		[] Style Components with Grids
			[] Style Todolist Page
			[] Style Todolist Item Page
			[] Style Home Page

	[] Let user know when a new page is loading or that data is being saved ('Saving...') after clicking certain buttons.

	[] Make sure lazy loading and data is being loading in properly and effectively

	//--AFTER COMPLETING ABOVE, HOST ON DOMAIN AND DO BELOW:--\\
	//--AFTER COMPLETING ABOVE, HOST ON DOMAIN AND DO BELOW:--\\
	//--AFTER COMPLETING ABOVE, HOST ON DOMAIN AND DO BELOW:--\\

	[] Allow users to add todo item descriptions in URL as an additional slash or as a query param
	[] Todolist Order
		[] rearrange order or todolists
	[] Todos Order
		[] rearrange order of items
	[] Further break down the todolists and todolist components so that each individual list item is a component or directive
	[] Testing (end to end testing, other types)
		[] Jasmine/Karma/Mocha/Chai
			[] Here are some tests to start with:
					[] Creating a Todolist and todolistitem straight from the URL does NOT work yet (it will create a todolist but it does NOT save for the user)
						[] Make sure you can do all of these things:
							[] create user from website AND Url
							[] create todolist from website AND Url
								[] The created todolist will be associated with the user it is a part of
							[] create todo from website AND Url
								[x] Creating a todo from the URL will edit and update the todolist it is a part of.
							[x] create a user, and todolist, and a todoitem all in one go, ie (s2doo.me/<newUser>/<newTodolist>/<newTodo>), and have everything be created successfully.
							[x] create a user and a todolist in one go
	[x] username and todolist title Validation ?
		[x] Do not allow users to enter certain characters or numbers
	[] Break form submit button and input tags into seperate components/directives (since they are all designed and built so similarly, just need to pass in the proper form id)
	[] Add Todolist features
		[] Location
		[] Lists inside of Todolists (kind of like collections of todos within todolists that you can still checkOff one at a time)
	[] Optimize the website
		[] Cache images and JS scipts and pages
		[] Utilize Local Storage over Cookies to reduce bandwidth of HTTP requests
		[] minify and uglify JS code
		[] use gulp or webpack to minify files and build everything out
	[] Add modal if username exists ("This name exists. Do you want to see this users todolists or do you want to create a new one?")
	[] Use a gulp task runner to minify/uglify site

	//-- Reach Goals --\\
	[] Make the project open source so others can add to it



// -- ------- -- \\
// -- DEFECTS -- \\
// -- ------- -- \\
	Fix Before Release:
	[] The ordering of Todos after checking them messes with a lot of styling, create a new filter/order method that works more smoothly.
	[] LOADY GIFS
		[] Or some kind of response when user clicks...:
			[] Create User
			[] Create Todo
			[] Create Todolist
			[] Save Todolist
			[] Changing State through tabs
			[] ANYTHING that makes a backend request should get a loady gif
	[] Save and Cancel buttons (during edit modes) dont show if the form is enabled or disabled very well (could just be the check button that changes. Right now it disables and enables properly, but there is no visual que)



	After Release:
	[] Show/Hide the create todolist and create todo divs on MOBILE
	[] URLs ending in '/' will create blank users and blank todolists
	[] No Validation on URL creation (In other words, I can create titles and users with too few characters and special characters from the URL)
	[] Todo List Titles cannot have spaces in them (They should be able to have spaces!)
	[x] Creating a Todolist and todolistitem straight from the URL does NOT work yet (Although you can access existing todolists this way just fine)
	[] Creating a user from the create-user component on home page will overwrite an existing user
		[***] modal if username exists ("This name exists. Do you want to see this users todolists or do you want to create a new one?")
	[x] Editing Todolist Titles not working properly as cancelling will still update the current title (although it will not save which is good)
	[] When we delete a todolist, it is not removing that todolist._id from the users "todolists" array. So a user may have an array with like 20 todolists but only have 3 todolists showing, and that is because he has deleted 17 of them. (try console logging "console.log(this.currentUser.todolists)" in the todolists.component.js $onInit method).
		** This is low priority, there is no consequence of this, but it would be cleaner to do so i think... ALTHOUGH, Maybe we should keep these Ids incase user wants to bring back deleted list? nah, deelete them from array!
